apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
spec:
  {{- if not .Values.n8n.autoscaling.enabled }}
  replicas: {{ .Values.n8n.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.n8n.deploymentStrategy.type }}
    {{- if eq .Values.n8n.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ default "25%" .Values.n8n.deploymentStrategy.maxSurge  }}
      maxUnavailable: {{ default "25%" .Values.n8n.deploymentStrategy.maxUnavailable }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/type: master
  template:
    metadata:
      annotations:
        checksum/config: {{ print .Values | sha256sum }}
        {{- with .Values.n8n.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/type: master
        {{- if .Values.n8n.podLabels }}
          {{ toYaml .Values.n8n.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.n8n.podSecurityContext | nindent 8 }}
      {{- if or .Values.n8n.initContainers (and .Values.n8n.persistence.enabled (eq .Values.n8n.persistence.type "dynamic")) }}
      initContainers:
      {{- if and .Values.n8n.persistence.enabled (eq .Values.n8n.persistence.type "dynamic") }}
        - name: init-data-dir
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/sh", "-c", "mkdir -p /home/node/.n8n/"]
          volumeMounts:
            - name: data
              mountPath: /home/node/.n8n
      {{- end }}
      {{- if .Values.n8n.initContainers }}
      {{ tpl (toYaml .Values.n8n.initContainers) . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.n8n.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.n8n.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: app-config-{{ include "n8n.fullname" . }}
            - secretRef:
                name: app-secret-{{ include "n8n.fullname" . }}
          lifecycle:
            {{- toYaml .Values.n8n.lifecycle | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ get .Values.n8n.config "port" | default 5678 }}
              protocol: TCP
          {{- with .Values.n8n.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.n8n.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.n8n.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /home/node/.n8n
      {{- with .Values.n8n.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.n8n.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.n8n.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: "data"
          {{ include "n8n.pvc" . }}
