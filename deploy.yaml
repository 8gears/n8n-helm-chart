---
# Source: n8n/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: n8n
  labels:
    helm.sh/chart: n8n-0.23.0
    app.kubernetes.io/name: n8n
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/version: "1.33.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: n8n/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: n8n
  labels:
    helm.sh/chart: n8n-0.23.0
    app.kubernetes.io/name: n8n
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/version: "1.33.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.json: |
    {
      "executions": {
        "pruneData": "true",
        "pruneDataMaxAge": 3760
      }
    }
---
# Source: n8n/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: n8n
  labels:
    helm.sh/chart: n8n-0.23.0
    app.kubernetes.io/name: n8n
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/version: "1.33.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: n8n
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/type: master
---
# Source: n8n/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  labels:
    helm.sh/chart: n8n-0.23.0
    app.kubernetes.io/name: n8n
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/version: "1.33.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: n8n
      app.kubernetes.io/instance: n8n
      app.kubernetes.io/type: master
  template:
    metadata:
      annotations:
        checksum/config: c0bb3980c19270be5448f1677eb9ff58d0f643980e091527cb8da450033adc84
      labels:
        app.kubernetes.io/name: n8n
        app.kubernetes.io/instance: n8n
        app.kubernetes.io/type: master

    spec:
      serviceAccountName: n8n
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: n8n
          securityContext:
            {}
          image: "n8nio/n8n:1.33.1"
          imagePullPolicy: IfNotPresent
          env:
            
            - name: "N8N_PORT" #! we better set the port once again as ENV Var, see: https://community.n8n.io/t/default-config-is-not-set-or-the-port-to-be-more-precise/3158/3?u=vad1mo
              value: "5678"
            - name: "N8N_CONFIG_FILES"
              value: "/n8n-config/config.json"
            
          lifecycle:
            {}
          ports:
            - name: http
              containerPort: 5678
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /home/node/.n8n
            - name: config-volume
              mountPath: /n8n-config
      volumes:
        - name: "data"
          emptyDir: {}
        - name: config-volume
          configMap:
            name: n8n
---
# Source: n8n/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "n8n-test-connection"
  labels:
    helm.sh/chart: n8n-0.23.0
    app.kubernetes.io/name: n8n
    app.kubernetes.io/instance: n8n
    app.kubernetes.io/version: "1.33.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['n8n:80']
  restartPolicy: Never
